/*
   Project cps2_project

   Gradle build file for JaCaMo Applications
   janvier 25, 2022 - 18:47:13
*/

defaultTasks 'run'

apply plugin: 'java'
apply plugin: 'eclipse'

version '1.0'
group   'org.jacamo'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    maven { url "http://jacamo.sourceforge.net/maven2" }
    maven { url "https://raw.github.com/jacamo-lang/mvn-repo/master" }
    maven { url "https://repo.gradle.org/gradle/libs-releases-local" }
       maven { url "https://repo.eclipse.org/content/repositories/paho-releases/"}

    //maven { url "https://jade.tilab.com/maven/" }

    flatDir {
       dirs 'lib'
    }

    mavenCentral()    
}

dependencies {
    compile group: 'org.jacamo', name: 'jacamo', version: '1.0'
     compile 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.1.0'
     compile group: 'net.sourceforge.htmlunit', name: 'htmlunit', version: '2.8'
  compile group: 'org.apache.jena', name: 'jena-core', version: '3.4.0'
  implementation group: 'org.apache.jena', name: 'jena-rdfconnection', version: '4.4.0'

}

sourceSets {
    main {
        java {
            srcDir 'src/env'
            srcDir 'src/agt'
            srcDir 'src/org'
            srcDir 'src/java'
        }
        resources {
            srcDir 'src/resources'
        }
    }
}

task run (type: JavaExec, dependsOn: 'classes') {
    group       ' JaCaMo'
    description 'runs the JaCaMo application'
    doFirst {
        mkdir 'log'
    }
    main 'jacamo.infra.JaCaMoLauncher'
    args 'final_project.jcm'
    classpath sourceSets.main.runtimeClasspath
}

 buildscript {
     repositories {
         maven {
             url "https://repo.eclipse.org/content/repositories/paho-releases/"
         }
     }
 }
task uberJar(type: Jar, dependsOn: 'classes') {
    group      ' JaCaMo'
    description 'creates a single runnable jar file with all dependencies'

    manifest {
        attributes 'Main-Class': 'jacamo.infra.JaCaMoLauncher'
    }
    baseName = 'jacamo-final_project' // the name must start with jacamo so that jacamo...jar is found in the classpath
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    from (project.projectDir.absolutePath) {
        include '**/*.asl'
        include '**/*.xml'
        include '**/*.jcm'
        include '*.properties'
    }
    from (project.buildDir.absolutePath + '/jcm') {
        include '**/*'
    }
    with jar

    doFirst {
        copy {
            from 'final_project.jcm'
            rename 'final_project.jcm','default.jcm'
            into project.buildDir.absolutePath + '/jcm'
        }
    }
}

clean {
    delete 'bin'
    delete 'build'
    delete 'log'
}
